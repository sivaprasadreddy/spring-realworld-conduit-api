/*
 * This file is generated by jOOQ.
 */
package conduit.jooq.models.tables.records;


import conduit.jooq.models.tables.UserFollower;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFollowerRecord extends UpdatableRecordImpl<UserFollowerRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_follower.from_id</code>.
     */
    public void setFromId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_follower.from_id</code>.
     */
    public Long getFromId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_follower.to_id</code>.
     */
    public void setToId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_follower.to_id</code>.
     */
    public Long getToId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserFollower.USER_FOLLOWER.FROM_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserFollower.USER_FOLLOWER.TO_ID;
    }

    @Override
    public Long component1() {
        return getFromId();
    }

    @Override
    public Long component2() {
        return getToId();
    }

    @Override
    public Long value1() {
        return getFromId();
    }

    @Override
    public Long value2() {
        return getToId();
    }

    @Override
    public UserFollowerRecord value1(Long value) {
        setFromId(value);
        return this;
    }

    @Override
    public UserFollowerRecord value2(Long value) {
        setToId(value);
        return this;
    }

    @Override
    public UserFollowerRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFollowerRecord
     */
    public UserFollowerRecord() {
        super(UserFollower.USER_FOLLOWER);
    }

    /**
     * Create a detached, initialised UserFollowerRecord
     */
    public UserFollowerRecord(Long fromId, Long toId) {
        super(UserFollower.USER_FOLLOWER);

        setFromId(fromId);
        setToId(toId);
        resetChangedOnNotNull();
    }
}
