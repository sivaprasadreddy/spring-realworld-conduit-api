/*
 * This file is generated by jOOQ.
 */
package conduit.jooq.models.tables.records;


import conduit.jooq.models.tables.Articles;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticlesRecord extends UpdatableRecordImpl<ArticlesRecord> implements Record8<Long, String, String, String, String, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.articles.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.articles.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.articles.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.articles.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.articles.slug</code>.
     */
    public void setSlug(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.articles.slug</code>.
     */
    public String getSlug() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.articles.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.articles.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.articles.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.articles.content</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.articles.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.articles.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.articles.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.articles.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.articles.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.articles.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Articles.ARTICLES.ID;
    }

    @Override
    public Field<String> field2() {
        return Articles.ARTICLES.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Articles.ARTICLES.SLUG;
    }

    @Override
    public Field<String> field4() {
        return Articles.ARTICLES.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return Articles.ARTICLES.CONTENT;
    }

    @Override
    public Field<Long> field6() {
        return Articles.ARTICLES.AUTHOR_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Articles.ARTICLES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Articles.ARTICLES.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getSlug();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public Long component6() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getSlug();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public Long value6() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public ArticlesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ArticlesRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ArticlesRecord value3(String value) {
        setSlug(value);
        return this;
    }

    @Override
    public ArticlesRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ArticlesRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public ArticlesRecord value6(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public ArticlesRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ArticlesRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ArticlesRecord values(Long value1, String value2, String value3, String value4, String value5, Long value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticlesRecord
     */
    public ArticlesRecord() {
        super(Articles.ARTICLES);
    }

    /**
     * Create a detached, initialised ArticlesRecord
     */
    public ArticlesRecord(Long id, String title, String slug, String description, String content, Long authorId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Articles.ARTICLES);

        setId(id);
        setTitle(title);
        setSlug(slug);
        setDescription(description);
        setContent(content);
        setAuthorId(authorId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
