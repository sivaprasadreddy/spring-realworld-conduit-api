/*
 * This file is generated by jOOQ.
 */
package conduit.jooq.models.tables.records;


import conduit.jooq.models.tables.Comments;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record6<Long, String, Long, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.comments.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.comments.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.comments.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.comments.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.comments.article_id</code>.
     */
    public void setArticleId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.comments.article_id</code>.
     */
    public Long getArticleId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.comments.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.comments.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.comments.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.comments.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.comments.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.comments.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, Long, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Comments.COMMENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Comments.COMMENTS.CONTENT;
    }

    @Override
    public Field<Long> field3() {
        return Comments.COMMENTS.ARTICLE_ID;
    }

    @Override
    public Field<Long> field4() {
        return Comments.COMMENTS.AUTHOR_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Comments.COMMENTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comments.COMMENTS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public Long component3() {
        return getArticleId();
    }

    @Override
    public Long component4() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public Long value3() {
        return getArticleId();
    }

    @Override
    public Long value4() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public CommentsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommentsRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentsRecord value3(Long value) {
        setArticleId(value);
        return this;
    }

    @Override
    public CommentsRecord value4(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public CommentsRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CommentsRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CommentsRecord values(Long value1, String value2, Long value3, Long value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Long id, String content, Long articleId, Long authorId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Comments.COMMENTS);

        setId(id);
        setContent(content);
        setArticleId(articleId);
        setAuthorId(authorId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
